apiVersion: v1
kind: Service
metadata:
  name: requestbin
  labels:
    app: requestbin
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: requestbin
---
# deployment
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: requestbin-deployment
spec:
  selector:
    matchLabels:
      app: requestbin
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: requestbin
    spec:
      containers:
      - name: requestbin
        image: crccheck/requestbin:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 2
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 2
        env:
        - name: REDIS_URL
          value: redis://81471092c56111e4.m.cnhza.kvstore.aliyuncs.com:6379/4
---
# Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: requestbin
  labels:
    app: requestbin
  annotations:
    kubernetes.io/ingress.class: "nginx"    
    certmanager.k8s.io/issuer: "letsencrypt-prod"
    certmanager.k8s.io/acme-challenge-type: http01
spec:
  tls:
  - hosts:
    - requestbin.ojpal.net
    secretName: requestbin-tls
  rules:
    - host: requestbin.ojpal.net
      http:
        paths:
          - path: /
            backend:
              serviceName: requestbin
              servicePort: http
